plugins {
    id 'java-library'
    id 'com.github.johnrengelman.shadow' version '7.0.0'
    id 'maven-publish'
    id 'signing'
}

group 'com.exaroton.velocity'
version '1.3.0'

repositories {
    maven {
        name 'velocity'
        url 'https://nexus.velocitypowered.com/repository/maven-public/'
    }
    mavenCentral()
}

dependencies {
    shadow 'com.velocitypowered:velocity-api:3.0.0'
    annotationProcessor 'com.velocitypowered:velocity-api:1.1.8'
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.7.0'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.7.0'
    implementation 'com.exaroton:api:1.3.1'
}

java {
    withJavadocJar()
    withSourcesJar()
}

ext.isReleaseVersion = !version.endsWith("SNAPSHOT")

publishing {
    repositories {
        maven {
            def releaseRepo = "https://s01.oss.sonatype.org/service/local/staging/deploy/maven2/"
            def snapshotRepo = "https://s01.oss.sonatype.org/content/repositories/snapshots/"
            url = isReleaseVersion ? releaseRepo : snapshotRepo
            credentials {
                username = project.hasProperty('ossrhUsername') ? ossrhUsername : "Unknown user"
                password = project.hasProperty('ossrhPassword') ? ossrhPassword : "Unknown password"
            }
        }
    }

    publications {
        mavenJava(MavenPublication) {
            from components.java
            artifactId = 'velocity'
            pom {
                name = 'exaroton velocity API'
                description = 'The official exaroton velocity plugin to manage exaroton servers in your proxy'
                url = 'https://github.com/exaroton/exaroton-velocity'
                licenses {
                    license {
                        name = 'MIT'
                        url = 'https://github.com/exaroton/exaroton-velocity/blob/master/LICENSE'
                    }
                }
                developers {
                    developer {
                        id = 'julian'
                        name = 'Julian Vennen'
                        email = 'julian@aternos.org'
                    }
                }
                scm {
                    connection = 'scm:git:https://github.com/exaroton/exaroton-velocity.git'
                    developerConnection = 'scm:git:git@github.com:exaroton/exaroton-velocity.git'
                    url = 'https://github.com/exaroton/exaroton-velocity'
                }
            }
        }
    }
}

signing {
    sign publishing.publications.mavenJava
}
tasks.withType(Sign) {
    onlyIf { isReleaseVersion }
}

shadowJar {
    archiveClassifier.set('')
}

task copyPlugin {
    exec {
        executable "cp"
        args = [
                "./build/libs/${rootProject.name}-${rootProject.version}.jar",
                "./run/plugins/${rootProject.name}-dev.jar"
        ]
    }
}

shadowJar.finalizedBy("copyPlugin")